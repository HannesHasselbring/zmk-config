/*
 * Copyright (c) 2023 Hannes Hasselbring
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_LEFT_R1     &kp Q       &kp W       &kp F       &kp P       &kp G
#define DEFAULT_RIGHT_R1    &kp J       &kp L       &kp U       &kp Y       &kp SEMI
#define DEFAULT_LEFT_R2     &hm LCTRL A &hm LALT R  &hm LGUI S  &hm LSHFT T &kp D
#define DEFAULT_RIGHT_R2    &kp H       &hm RSHFT N &hm RGUI E  &hm RALT I  &hm RCTRL O
#define DEFAULT_LEFT_R3     &kp Z       &kp X       &kp C       &kp V       &kp B
#define DEFAULT_RIGHT_R3    &kp K       &kp M       &kp COMMA   &kp DOT     &kp FSLH
#define DEFAULT_LEFT_THUMB  &mt RGUI SQT    &lt 1 RET
#define DEFAULT_RIGHT_THUMB &lt 2 SPACE  &mt RALT TAB

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };

        combo_ent {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
        };

        backsp_word {
            bindings = <&kp BSPC>;
            key-positions = <9 8>;
        };

        bracket_combo {
            bindings = <&bracket_macro>;
            key-positions = <5 6>;
        };

        par_macro {
            bindings = <&par_macro>;
            key-positions = <17 18>;
        };

        brace_combo {
            bindings = <&brace_macro>;
            key-positions = <29 30>;
        };

        caps_word_combo {
            bindings = <&caps_word>;
            key-positions = <26 27>;
        };
    };

    macros {
        bracket_macro: bracket_macro {
            compatible = "zmk,behavior-macro";
            label = "BRACKET_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RIGHT_BRACKET &kp LEFT_ARROW>;
        };
        brace_macro: brace_macro {
            compatible = "zmk,behavior-macro";
            label = "BRACE_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
        };
        par_macro: par_macro {
            compatible = "zmk,behavior-macro";
            label = "PAR_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
        };
        scrn_shot_macro: scrn_shot_macro {
            compatible = "zmk,behavior-macro";
            label = "SCRN_SHOT_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(NUMBER_4)))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    DEFAULT_LEFT_R1             DEFAULT_RIGHT_R1     &kp BSPC
&kp LCTRL  DEFAULT_LEFT_R2             DEFAULT_RIGHT_R2     &kp SQT
&kp LSHFT  DEFAULT_LEFT_R3             DEFAULT_RIGHT_R3     &mt RSHFT RET
         DEFAULT_LEFT_THUMB &kp SPACE  DEFAULT_RIGHT_THUMB
            >;
        };

        lower_layer {
            bindings = <
&trans   &kp EXCL    &kp AT  &kp HASH    &kp DLLR  &kp PRCNT           &kp CARET  &kp AMPS    &kp ASTRK       &kp LPAR   &kp RPAR  &trans
&trans  &kp UNDER  &kp PLUS  &kp LBRC    &kp RBRC   &kp PIPE            &kp LEFT  &kp DOWN       &kp UP      &kp RIGHT   &kp SEMI  &trans
&trans    &kp ESC  &kp LGUI  &kp LALT  &caps_word    &kp DQT            &kp HOME   &kp END  &kp PAGE_UP  &kp PAGE_DOWN  &kp PSCRN  &trans
                               &trans      &trans             &kp RET                &mo 3       &trans
            >;
        };

        raise_layer {
            bindings = <
&trans     &kp N1     &kp N2    &kp N3    &kp N4    &kp N5                   &kp N6  &kp N7     &kp N8     &kp N9     &kp N0  &trans
&trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH            &kp LG(GRAVE)  &trans  &kp GRAVE  &kp TILDE  &kp COLON  &trans
&trans    &kp ESC   &kp LGUI  &kp RALT  &kp CLCK   &kp DQT                  &kp TAB  &trans     &trans     &trans     &trans  &trans
                                &trans     &mo 3            &kp BSPC                 &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans   &kp F1   &kp F2  &kp F3  &kp F4            &kp F5          &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bt BT_CLR
&trans   &kp F6   &kp F7  &kp F8  &kp F9           &kp F10                 &none          &none         &none         &none         &none        &none
&trans  &kp F12  &kp F11   &none   &none  &scrn_shot_macro           &kp LG(TAB)  &kp LG(GRAVE)         &none         &none    &sys_reset  &bootloader
                          &trans  &trans                    &tog 3                       &trans        &trans
            >;
        };
    };
};
