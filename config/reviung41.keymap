/*
 * Copyright (c) 2023 Hannes Hasselbring
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "defaults/layout.h"

/*                                      41 KEY MATRIX / LAYOUT MAPPING
    see: https://github.com/urob/zmk-nodefree-config/blob/main/keypos_def/keypos_42keys.h
  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40     ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1     ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */



// #pragma once

#define LT0  5  // left-top row
#define LT1  4
#define LT2  3
#define LT3  2
#define LT4  1
#define LT5  0

#define RT0  6  // right-top row
#define RT1  7
#define RT2  8
#define RT3  9
#define RT4 10
#define RT5 11

#define LM0 17  // left-middle row
#define LM1 16
#define LM2 15
#define LM3 14
#define LM4 13
#define LM5 12

#define RM0 18  // right-middle row
#define RM1 19
#define RM2 20
#define RM3 21
#define RM4 22
#define RM5 23

#define LB0 29  // left-bottom row
#define LB1 28
#define LB2 27
#define LB3 26
#define LB4 25
#define LB5 24

#define RB0 30  // right-bottom row
#define RB1 31
#define RB2 32
#define RB3 33
#define RB4 34
#define RB5 35

#define LH0 38  // left thumb keys
#define LH1 37
#define LH2 36

#define RH0 39  // right thumb keys
#define RH1 40

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <LT2 LT3>;
        };

        combo_ent {
            bindings = <&kp ENTER>;
            key-positions = <RB2 RB3>;
        };

        backsp_word {
            bindings = <&kp BSPC>;
            key-positions = <RB2 RB3>;
        };

        bracket_combo {
            bindings = <&macro_bracket>;
            key-positions = <LT0 RT0>;
        };

        par_macro {
            bindings = <&macro_parentheses>;
            key-positions = <LM0 RM0>;
        };

        brace_combo {
            bindings = <&macro_brace>;
            key-positions = <RB0 LB0>;
        };

        caps_word_combo {
            bindings = <&caps_word>;
            key-positions = <LB2 LB3>;
        };
    };

    macros {
        #include "defaults/macros.dtsi"
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    DEFAULT_LEFT_R1             DEFAULT_RIGHT_R1     &kp BSPC
&kp LCTRL  DEFAULT_LEFT_R2             DEFAULT_RIGHT_R2     &kp SQT
&kp LSHFT  DEFAULT_LEFT_R3             DEFAULT_RIGHT_R3     &mt RSHFT RET
         DEFAULT_LEFT_THUMB &kp SPACE  DEFAULT_RIGHT_THUMB
            >;
        };

        lower_layer {
            bindings = <
&trans  LOWER_LEFT_R1           LOWER_RIGHT_R1  &trans
&trans  LOWER_LEFT_R2           LOWER_RIGHT_R2  &trans
&trans  LOWER_LEFT_R2           LOWER_RIGHT_R3  &trans
    LOWER_LEFT_THUMB  &kp RET   LOWER_RIGHT_THUMB
            >;
        };

        raise_layer {
            bindings = <
&trans  RAISE_LEFT_R1            RAISE_RIGHT_R1  &trans
&trans  RAISE_LEFT_R1            RAISE_RIGHT_R2  &trans
&trans  RAISE_LEFT_R1            RAISE_RIGHT_R3  &trans
   RAISE_LEFT_THUMB    &none     RAISE_RIGHT_THUMB
            >;
        };

        adjust_layer {
            bindings = <
&trans  ADJUST_LEFT_R1          ADJUST_RIGHT_R1 &bt BT_CLR
&trans  ADJUST_LEFT_R2          ADJUST_RIGHT_R2 &none
&trans  ADJUST_LEFT_R3          ADJUST_RIGHT_R3 &bootloader
    ADJUST_LEFT_THUMB   &none   ADJUST_RIGHT_THUMB
            >;
        };
    };
};
